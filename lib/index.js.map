{"version":3,"sources":["../src/index.js"],"names":["require","default","global","Promise","str","vider","readDir","P","readdir","parser2","name","zk","host","connectTimeout","retries","dubbo_version","service_version","service_group","strictString","ip","username","password","existsSync","client","createClient","clientHost","init","readFile","self","domains","dubbo","forEach","ele","index","clzName","fns","methods","method","regs","exec","type","ret","fn","value","undefined","stringSafeChange","firstLowCase","substr","lastIndexOf","args","el","push","type_","isArray","indexOf","match","i","length","dataCheck","check","error","message","state","invoke","file_finished","finish_call","readNode","host_","getChildren","children","node","services","consumer","query","interface","timestamp","Date","getTime","version","revision","versions","service","decodeURIComponent","ser_param","parse","ser_host","hostname","addNode","encodeURIComponent","format","node_finished","called","emit","once","protocol","slashes","application","category","side","exists","createNode","create","watch","connect","stat","random","arr","Math","floor","methodName","resolve","reject","domain_","on","err","code","toString","run","proxy","Proxy","reply","fault","status","data","hasOwnProperty","domain","fullName","pre","__type__","EventEmitter","module","exports"],"mappings":"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","file":"index.js","sourcesContent":["/**\r\n * Created by cc on 16/8/11.\r\n */\r\n'use strict';\r\nimport url from 'url';\r\nimport events from 'events';\r\nimport fs from 'fs';\r\nimport domain from 'domain';\r\nimport querystring from 'querystring';\r\n\r\n\r\nimport zookeeper from 'node-zookeeper-client';\r\nimport parser from 'java-class-parser-generics';\r\nimport hessian from 'hessian-proxy-garbled';\r\n\r\nimport tool from './toolkit.js';\r\n\r\nrequire('babel-runtime/core-js/promise').default = require('bluebird');\r\nglobal.Promise = require('bluebird');\r\n\r\nlet str = '', vider = 'providers';\r\nlet readDir = tool.P(fs.readdir);\r\nlet parser2 = tool.P(parser);\r\n\r\nexport default class extends events.EventEmitter {\r\n    /**\r\n     * @param json对象，key的含义如下:\r\n     *  name（app标识）,\r\n     *  zk(注册中心地址 ip:port\r\n     *  host 本机IP\r\n     *  dubbo_version(展示到注册中心的消费者dubbo版本,默认2.8.4),\r\n     *  service_version(服务版本,默认为任意版本,不为空时在ZK中心只获取指定版本的服务),\r\n     *  service_group = 'dubbo'(服务分组,默认dubbo,这也是dubbo服务端在不指定分组时的默认分组)\r\n     *  strictString = true(是否过滤所有提交字符串中的script/frame等)\r\n     *  host(固定调用的服务器地址ip,不传表示调用任意地址,例如 10.0.0.1表示只调用10.0.0.1上的服务)\r\n     *  username zk用户名\r\n     *  password zk密码\r\n     */\r\n    constructor({name = 'node-client', zk,host = 'node-host', connectTimeout = 1000, retries = 3, dubbo_version = '2.8.4', service_version = false, service_group = 'dubbo', strictString = true, ip = false, username = '', password = ''} = {}) {\r\n        if (!zk) {\r\n            throw '必须定义zk地址!';\r\n        }\r\n        if (fs.existsSync('./interface') === false) {\r\n            throw 'interface目录不存在!';\r\n        }\r\n        super();\r\n        this.client = zookeeper.createClient(zk, {\r\n            connectTimeout: connectTimeout,\r\n            retries: retries\r\n        });\r\n        this.name = name;\r\n        this.dubbo_version = dubbo_version;\r\n        this.service_version = service_version;\r\n        this.service_group = service_group;\r\n        this.strictString = strictString;\r\n        this.ip = ip;\r\n        this.clientHost = host;\r\n        this.username = username;\r\n        this.password = password;\r\n        this.init();\r\n    }\r\n\r\n    /**\r\n     * 读取class\r\n     */\r\n    async readFile() {\r\n        let self = this;\r\n        let domains = await readDir('./interface/domain');\r\n        this.domains = {};\r\n        this.dubbo = {};\r\n        domains.forEach((ele, index) => {\r\n            domains[index] = `./interface/domain/${ele}`;\r\n        });\r\n        domains = await parser2(domains);\r\n        for(let clzName in domains){\r\n            let fns = {};\r\n            domains[clzName].methods.forEach((method) => {\r\n                var regs = /^get(\\w*)/.exec(method.name);\r\n                if (regs !== null) {\r\n                    var type = method.ret, fn;\r\n                    switch (type) {\r\n                        case 'java.lang.String' :\r\n                            fn = (value) => {\r\n                                if (value === null || value === undefined || value === 'null') {\r\n                                    return null;\r\n                                }\r\n                                return tool.stringSafeChange(this.strictString, value + str);\r\n                            };\r\n                            break;\r\n                        case 'int' :\r\n                        case 'float' :\r\n                        case 'double' :\r\n                        case 'long' :\r\n                            fn = (value) => {\r\n                                if (value === '' || value === undefined || value === null) {\r\n                                    return 0;\r\n                                }\r\n                                return +value;\r\n                            };\r\n                            break;\r\n                        case 'java.lang.Integer' :\r\n                        case 'java.lang.Double' :\r\n                        case 'java.lang.Float' :\r\n                        case 'java.lang.Long' :\r\n                        case 'java.lang.Number' :\r\n                            fn = (value) => {\r\n                                if (value === '' || value === undefined || value === null) {\r\n                                    return null;\r\n                                }\r\n                                return +value;\r\n                            };\r\n                            break;\r\n                        case 'java.math.BigDecimal' :\r\n                            fn = (value) => {\r\n                                if (value === '' || value === undefined || value === null) {\r\n                                    return null;\r\n                                } else if (typeof value === 'object') {\r\n                                    if (value.value === '' || value.value === undefined || value.value === null) return null;\r\n                                    else return {value: +value.value}\r\n                                } else {\r\n                                    return {value: +value}\r\n                                }\r\n                            };\r\n                            break;\r\n                        case 'boolean' :\r\n                            fn = (value) => {\r\n                                if (value === '' || value === undefined || value === null) {\r\n                                    return false;\r\n                                } else if (typeof value === 'string') {\r\n                                    return value === 'true';\r\n                                } else {\r\n                                    return value\r\n                                }\r\n                            };\r\n                            break;\r\n                        case 'java.lang.Boolean' :\r\n                            fn = (value) => {\r\n                                if (value === '' || value === undefined) {\r\n                                    return null;\r\n                                } else if (typeof value === 'string') {\r\n                                    return value === 'true';\r\n                                } else {\r\n                                    return value\r\n                                }\r\n                            };\r\n                            break;\r\n                        default :\r\n                            fn = (value) => {\r\n                                return value;\r\n                            };\r\n                            break;\r\n                    }\r\n                    fns[tool.firstLowCase(regs[1])] = fn;\r\n                }\r\n            });\r\n            this.domains[clzName] = fns;\r\n        }\r\n        domains = await readDir('./interface/service');\r\n        domains.forEach((ele, index) => {\r\n            domains[index] = `./interface/service/${ele}`;\r\n        });\r\n        domains = await parser2(domains);\r\n        for(let clzName in domains){\r\n            let name = clzName.substr(clzName.lastIndexOf('.') + 1);\r\n            this.dubbo[name] = {};\r\n            domains[clzName].methods.forEach((method) => {\r\n                let fns = [];\r\n                method.args.forEach((el) => {\r\n                    switch (el) {\r\n                        case 'java.lang.String' :\r\n                            fns.push((value) => {\r\n                                if (value === null || value === undefined || value === 'null') {\r\n                                    return null;\r\n                                }\r\n                                return tool.stringSafeChange(value + str);\r\n                            });\r\n                            break;\r\n                        case 'int' :\r\n                        case 'float' :\r\n                        case 'double' :\r\n                        case 'long' :\r\n                            fns.push((value) => {\r\n                                return +value;\r\n                            });\r\n                            break;\r\n                        case 'java.lang.Integer' :\r\n                        case 'java.lang.Double' :\r\n                        case 'java.lang.Float' :\r\n                        case 'java.lang.Long' :\r\n                        case 'java.lang.Number' :\r\n                            fns.push((value) => {\r\n                                if (value !== null && value !== undefined && value !== '') {\r\n                                    return +value;\r\n                                }\r\n                                return null;\r\n                            });\r\n                            break;\r\n                        case 'java.math.BigDecimal' :\r\n                            fns.push((value) => {\r\n                                if (value === '' || value === undefined || value === null) {\r\n                                    return null;\r\n                                } else if (typeof value === 'object') {\r\n                                    if (value.value === '' || value.value === undefined || value.value === null) return null;\r\n                                    else return {value: +value.value}\r\n                                } else {\r\n                                    return {value: +value}\r\n                                }\r\n                            });\r\n                            break;\r\n                        case 'java.lang.Boolean' :\r\n                            fns.push((value) => {\r\n                                if (value === '' || value === undefined) {\r\n                                    return null;\r\n                                } else if (typeof value === 'string') {\r\n                                    return value === 'true';\r\n                                } else {\r\n                                    return value\r\n                                }\r\n                            });\r\n                            break;\r\n                        default :\r\n                            var type_, isArray = false;\r\n                            if (el.indexOf('java.util.List') === -1) {\r\n                                type_ = el;\r\n                            } else {\r\n                                type_ = el.match(/<(.*)>/);\r\n                                isArray = true;\r\n                                type_ !== null && (type_ = type_[1]);\r\n                            }\r\n                            if (this.domains[type_] !== undefined) {\r\n                                if (isArray === true) {\r\n                                    fns.push((value) => {\r\n                                        if (value !== null && value !== undefined) {\r\n                                            for (var i = 0; i < value.length; i++) {\r\n                                                if (value[i] !== null && value[i] !== undefined) {\r\n                                                    value[i] = tool.dataCheck(value[i], type_);\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                        return value;\r\n                                    });\r\n                                } else {\r\n                                    fns.push((value) => {\r\n                                        if (value !== null && value !== undefined) {\r\n                                            value = this.dataCheck(value, type_);\r\n                                        }\r\n                                        return value;\r\n                                    });\r\n                                }\r\n                            } else {\r\n                                fns.push((value) => {\r\n                                    return value;\r\n                                });\r\n                            }\r\n                            break;\r\n                    }\r\n                });\r\n                this.dubbo[name][method.name] = async function () {\r\n                    var args = Array.from(arguments);\r\n                    if (args.length !== self.dubbo[name][method.name].check.length) {\r\n                        throw {\r\n                            error: `请求${clzName}.${method.name}时参数不符,class定义了${self.dubbo[name][method.name].check.length}个,传了${args.length}个!`,\r\n                            message: `请求${clzName}.${method.name}时参数不符,class定义了${self.dubbo[name][method.name].check.length}个,传了${args.length}个!`,\r\n                            state: 101005\r\n                        };\r\n                    }\r\n                    args.forEach((value, index) => {\r\n                        args[index] = self.dubbo[name][method.name].check[index](value);\r\n                    });\r\n                    return await self.invoke(clzName, method.name, args);\r\n                };\r\n                this.dubbo[name][method.name].check = fns;\r\n            });\r\n        }\r\n        this.file_finished = true;\r\n        this.finish_call();\r\n    }\r\n\r\n    /**\r\n     * 读取节点\r\n     */\r\n    async readNode() {\r\n        let host_ = {};\r\n        let children = await this.getChildren(`/${this.service_group}`, () => {\r\n            this.readNode();\r\n        });\r\n        for (let i = 0; i < children.length; i++) {\r\n            let node = children[i];\r\n            host_[node] = [];\r\n            let services = await this.getChildren(`/${this.service_group}/${node}/${vider}`);\r\n            this.consumer.query.interface = node;\r\n            this.consumer.host = `${this.clientHost}/${node}`;\r\n            this.consumer.query.timestamp = this.consumer.query['×tamp'] = (new Date()).getTime();\r\n            this.consumer.query.version = this.consumer.query.revision = this.service_version || str;\r\n            let versions = [];\r\n            services.forEach((service) => {\r\n                service = decodeURIComponent(service);\r\n                let ser_param = querystring.parse(service);\r\n                if (this.service_version !== false && (ser_param['default.version'] || ser_param['version']) !== this.service_version) return;\r\n                let ser_host = url.parse(service);\r\n                if (this.ip !== false && ser_host.hostname !== this.ip) return;\r\n                host_[node].push(ser_host.host);\r\n                let version = ser_param['default.version'] || ser_param['version'];\r\n                if(versions.indexOf(version) === -1){\r\n                    versions.push(this.consumer.query.version = this.consumer.query.revision = version);\r\n                    this.addNode(`/${this.service_group}/${node}/consumers/${encodeURIComponent(url.format(this.consumer))}`);\r\n                }\r\n            });\r\n        }\r\n        this.node_finished = true;\r\n        this.host = host_;\r\n        this.finish_call();\r\n    }\r\n\r\n    /**\r\n     * 成功回调\r\n     */\r\n    finish_call() {\r\n        if (this.file_finished === true && this.node_finished === true && this.called === false) {\r\n            this.called = true;\r\n            this.emit('success');\r\n        }\r\n    }\r\n\r\n    init() {\r\n        this.host = {};\r\n        this.called = false;\r\n        this.client.once('connected', () => {\r\n            this.consumer = {\r\n                protocol: 'consumer',\r\n                slashes: 'true',\r\n                host: str,\r\n                query: {\r\n                    application: this.name,\r\n                    category: 'consumers',\r\n                    'default.timeout' : this.connectTimeout,\r\n                    check: 'false',\r\n                    dubbo: this.dubbo_version,\r\n                    interface: str,\r\n                    revision: str,\r\n                    version: str,\r\n                    side: 'consumer',\r\n                    timestamp: str\r\n                }\r\n            };\r\n            this.getChildren = tool.P(this.client.getChildren, this.client);\r\n            this.exists = tool.P(this.client.exists, this.client);\r\n            this.createNode = tool.P(this.client.create, this.client);\r\n            this.readNode();\r\n        }).once('disconnected', () => {\r\n            this.host = {};\r\n        });\r\n        fs.watch('./interface', this.readFile);\r\n        this.readFile();\r\n        this.client.connect();\r\n    }\r\n\r\n    /**\r\n     * 添加节点\r\n     * @param node\r\n     */\r\n    async addNode(node) {\r\n        let stat = await this.exists(node);\r\n        if (stat) return;\r\n        this.createNode(node, 1);\r\n    }\r\n\r\n    /**\r\n     * 随机算法\r\n     * @param length\r\n     * @returns {number}\r\n     */\r\n    random(arr) {\r\n        return arr[Math.floor(Math.random() * arr.length)];\r\n    }\r\n\r\n    /**\r\n     * 执行方法\r\n     * @param clzName\r\n     * @param methodName\r\n     * @param args\r\n     * @returns {Promise}\r\n     */\r\n    invoke(clzName, methodName, args) {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.host[clzName] === undefined || this.host[clzName].length === 0) {\r\n                throw {\r\n                    error: `zk中找不到${clzName}对应的服务节点`,\r\n                    message: `zk中找不到${clzName}对应的服务节点`,\r\n                    state: 101003\r\n                };\r\n            }\r\n            let host = this.random(this.host[clzName]);\r\n            let domain_ = domain.create();\r\n            domain_.on('error', (err) => {\r\n                throw {\r\n                    error: err,\r\n                    message: err,\r\n                    state: 101003\r\n                };\r\n                if (err.code && err.code.toString() === 'ECONNREFUSED') {\r\n                    throw {\r\n                        error: `连接${host}/${clzName}失败!`,\r\n                        message: `连接${host}/${clzName}失败!`,\r\n                        state: 101002\r\n                    };\r\n                } else {\r\n                    throw {\r\n                        error: `${clzName}发生错误 ${err.code}`,\r\n                        message: `${clzName}发生错误 ${err.code}`,\r\n                        state: 101005\r\n                    };\r\n                }\r\n            });\r\n            domain_.run(() => {\r\n                var proxy = new hessian.Proxy(`http://${host}/${clzName}`, this.username, this.password, proxy);\r\n                proxy.invoke(methodName, args, (err, reply) => {\r\n                    if (reply && reply.fault === true) {\r\n                        reject({\r\n                            message: `${clzName}/${methodName}发生异常!`,\r\n                            error: `${clzName}/${methodName}发生异常!`,\r\n                            state: 101004\r\n                        });\r\n                    } else if (err) {\r\n                        reject({\r\n                            message: `${clzName}/${methodName}发生异常：${JSON.stringify(err)}`,\r\n                            error: `${clzName}/${methodName}发生异常：${JSON.stringify(err)}`,\r\n                            state: 101004\r\n                        });\r\n                    } else if (reply.status > 0) {\r\n                        reject({\r\n                            message: reply.data,\r\n                            error: reply.data,\r\n                            state: reply.status\r\n                        });\r\n                    } else {\r\n                        resolve(reply.hasOwnProperty('data') ? reply.data : reply);\r\n                    }\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    dataCheck(domain,fullName) {\r\n        let fn = this.domains[fullName];\r\n        var pre = {};\r\n        for (var i in domain) {\r\n            if (fn.hasOwnProperty(i)) {\r\n                pre[i] = fn[i](domain[i]);\r\n            }\r\n        }\r\n        pre.__type__ = fullName;\r\n        return pre;\r\n    }\r\n};\r\n\r\nmodule.exports = exports.default;"]}