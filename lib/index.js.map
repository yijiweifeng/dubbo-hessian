{"version":3,"sources":["../src/index.js"],"names":["require","default","global","Promise","str","vider","readDir","P","readdir","parser2","Adubbo","Dubbo","name","zk","host","connectTimeout","retries","dubbo_version","service_version","service_group","strictString","ip","username","password","data","existsSync","_client","createClient","_connectTimeout","_name","_service_version","_service_group","_strictString","_ip","_clientHost","_username","_password","_data","_init","one","param","on","event","fn","_readFile","domains","_domains","_service","forEach","ele","index","fns","clzName","substr","lastIndexOf","methods","method","regs","exec","type","ret","value","undefined","stringSafeChange","firstLowCase","_dataCheck","args","el","push","type_","isArray","indexOf","match","valuei","i","length","check","emit","className","methodName","time","error","stata","message","_invoke","_host","_file_finished","_finish_call","_readNode","node","_getChildren","children","child","_node_finished","hosts","_version","services","consumer","_consumer","query","interface","timestamp","Date","getTime","version","revision","service","decodeURIComponent","ser_param","parse","ser_host","hostname","_addNode","encodeURIComponent","format","_called","protocol","slashes","application","category","dubbo","side","once","getChildren","_exists","exists","_createNode","create","watch","connect","stat","_random","arr","Math","floor","random","resolve","reject","begin","state","domain_","err","code","toString","end","run","proxy","Proxy","invoke","reply","fault","domain","fullName","pre","hasOwnProperty","__type__","EventEmitter","module","exports"],"mappings":"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","file":"index.js","sourcesContent":["/**\r\n * Created by cc on 16/8/11.\r\n *\r\n * 初始化 require(..).one(参数) ：\r\n *      初始化参数是json对象，key的含义如下:\r\n *      name（app标识）,\r\n *      zk(注册中心地址 ip:port\r\n *      host 本机IP\r\n *      connectTimeout 连接超时时间,\r\n *      retries 错误重试次数\r\n *      dubbo_version(展示到注册中心的消费者dubbo版本,默认2.8.4),\r\n *      service_version(服务版本,默认为任意版本,不为空时在ZK中心只获取指定版本的服务),\r\n *      service_group = '_service'(服务分组,默认dubbo,这也是dubbo服务端在不指定分组时的默认分组)\r\n *      strictString = true(是否过滤所有提交字符串中的script/frame等)\r\n *      host(固定调用的服务器地址ip,不传表示调用任意地址,例如 10.0.0.1表示只调用10.0.0.1上的服务)\r\n *      username zk用户名\r\n *      password zk密码\r\n *      data 数据处理方法,如果不传则将服务端返回的数据原生不动返回,该方法将接收一个参数，即服务器返回的数据；允许直接throw异常\r\n *\r\n *  关于异常格式：\r\n *      json对象，state=错误编码和message=错误消息\r\n *  内置的错误码：\r\n *      101006 参数不符\r\n *      101002 找不到节点\r\n *      101005 连接失败\r\n *      101004 服务端异常\r\n *  事件说明：\r\n *  绑定事件前需要先初始化\r\n *      require(..).on()\r\n *  on('接口名称') 这个接口初始化完毕，已经可以调用了,事件参数=接口对应的host列表\r\n *  on('data') 从服务器接收到数据时触发，事件参数=host，className，methodName，param，time，data\r\n *  on('error') 发生异常时触发，事件参数=host，className，methodName，param，time，error\r\n *  on('all')  全部初始化完毕\r\n *  新建实体类：\r\n *      require(..).domain.实体类名称();\r\n *  如何调用服务端代码\r\n *      require(..).service.接口名称.方法名(参数).then().catch(); 参数自动做类型转换\r\n */\r\n'use strict';\r\nimport url from 'url';\r\nimport events from 'events';\r\nimport fs from 'fs';\r\nimport domain from 'domain';\r\nimport querystring from 'querystring';\r\n\r\n\r\nimport zookeeper from 'node-zookeeper-client';\r\nimport parser from 'java-class-parser-generics';\r\nimport hessian from 'hessian-proxy-garbled';\r\n\r\nimport tool from './toolkit.js';\r\n\r\nrequire('babel-runtime/core-js/promise').default = require('bluebird');\r\nglobal.Promise = require('bluebird');\r\n\r\nlet str = '',\r\n    vider = 'providers';\r\nlet readDir = tool.P(fs.readdir);\r\nlet parser2 = tool.P(parser);\r\n\r\nlet Adubbo = false;\r\n\r\nexport default class Dubbo extends events.EventEmitter {\r\n    constructor({name = 'node_client', zk, host = 'node-host', connectTimeout = 1000, retries = 3, dubbo_version = '2.8.4', service_version = false, service_group = 'dubbo', strictString = true, ip = false, username = '', password = '', data} = {}) {\r\n        if (!zk) {\r\n            throw '必须定义zk地址!';\r\n        }\r\n        if (fs.existsSync('./interface') === false) {\r\n            throw 'interface目录不存在!';\r\n        }\r\n        super();\r\n        this._client = zookeeper.createClient(zk, {\r\n            connectTimeout: connectTimeout,\r\n            retries: retries\r\n        });\r\n        this._connectTimeout = connectTimeout;\r\n        this._name = name;\r\n        this._service_version = dubbo_version;\r\n        this._service_version = service_version;\r\n        this._service_group = service_group;\r\n        this._strictString = strictString;\r\n        this._ip = ip;\r\n        this._clientHost = host;\r\n        this._username = username;\r\n        this._password = password;\r\n        this._data = data;\r\n        this._init();\r\n    }\r\n\r\n    static one(param) {\r\n        if (Adubbo === false) {\r\n            Adubbo = new Dubbo(param);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    static on(event, fn) {\r\n        if (Adubbo !== false) {\r\n            Adubbo.on(event, fn)\r\n        }\r\n        return this;\r\n    }\r\n\r\n    static get service() {\r\n        return Adubbo._service;\r\n    }\r\n\r\n    static get domain() {\r\n        return Adubbo._domains;\r\n    }\r\n\r\n    async _readFile() {\r\n        let domains = await readDir('./interface/domain');\r\n        this._domains = {};\r\n        this._service = {};\r\n        domains.forEach((ele, index) => domains[index] = `./interface/domain/${ele}`);\r\n        domains = await parser2(domains);\r\n        Object.keys(domains).forEach(clzName => {\r\n            let fns = {};\r\n            let name = clzName.substr(clzName.lastIndexOf('.') + 1);\r\n            domains[clzName].methods.forEach((method) => {\r\n                var regs = /^get(\\w*)/.exec(method.name);\r\n                if (regs !== null) {\r\n                    var type = method.ret, fn;\r\n                    switch (type) {\r\n                        case 'java.lang.String':\r\n                            fn = (value) => {\r\n                                if (value === null || value === undefined || value === 'null') {\r\n                                    return null;\r\n                                }\r\n                                return tool.stringSafeChange(this._strictString, value + str);\r\n                            };\r\n                            break;\r\n                        case 'int':\r\n                        case 'float':\r\n                        case 'double':\r\n                        case 'long':\r\n                            fn = (value) => {\r\n                                if (value === '' || value === undefined || value === null) {\r\n                                    return 0;\r\n                                }\r\n                                return +value;\r\n                            };\r\n                            break;\r\n                        case 'java.lang.Integer':\r\n                        case 'java.lang.Double':\r\n                        case 'java.lang.Float':\r\n                        case 'java.lang.Long':\r\n                        case 'java.lang.Number':\r\n                            fn = (value) => {\r\n                                if (value === '' || value === undefined || value === null) {\r\n                                    return null;\r\n                                }\r\n                                return +value;\r\n                            };\r\n                            break;\r\n                        case 'java.math.BigDecimal':\r\n                            fn = (value) => {\r\n                                if (value === '' || value === undefined || value === null) {\r\n                                    return null;\r\n                                } else if (typeof value === 'object') {\r\n                                    if (value.value === '' || value.value === undefined || value.value === null) return null;\r\n                                    else return {value: +value.value}\r\n                                } else {\r\n                                    return {value: +value}\r\n                                }\r\n                            };\r\n                            break;\r\n                        case 'boolean':\r\n                            fn = (value) => {\r\n                                if (value === '' || value === undefined || value === null) {\r\n                                    return false;\r\n                                } else if (typeof value === 'string') {\r\n                                    return value === 'true';\r\n                                } else {\r\n                                    return value\r\n                                }\r\n                            };\r\n                            break;\r\n                        case 'java.lang.Boolean':\r\n                            fn = (value) => {\r\n                                if (value === '' || value === undefined) {\r\n                                    return null;\r\n                                } else if (typeof value === 'string') {\r\n                                    return value === 'true';\r\n                                } else {\r\n                                    return value\r\n                                }\r\n                            };\r\n                            break;\r\n                        default:\r\n                            fn = value => value;\r\n                            break;\r\n                    }\r\n                    fns[tool.firstLowCase(regs[1])] = fn;\r\n                }\r\n            });\r\n            this._domains[clzName] = fns;\r\n            this._domains[name] = () => this._dataCheck(false, clzName);\r\n        });\r\n        domains = await readDir('./interface/service');\r\n        domains.forEach((ele, index) => domains[index] = `./interface/service/${ele}`);\r\n        domains = await parser2(domains);\r\n        let methods = {};\r\n        Object.keys(domains).forEach(clzName => {\r\n            let name = clzName.substr(clzName.lastIndexOf('.') + 1);\r\n            domains[clzName].methods.forEach((method) => {\r\n                let fns = [];\r\n                method.args.forEach((el) => {\r\n                    switch (el) {\r\n                        case 'java.lang.String':\r\n                            fns.push((value) => {\r\n                                if (value === null || value === undefined || value === 'null') {\r\n                                    return null;\r\n                                }\r\n                                return tool.stringSafeChange(this._strictString,value + str);\r\n                            });\r\n                            break;\r\n                        case 'int':\r\n                        case 'float':\r\n                        case 'double':\r\n                        case 'long':\r\n                            fns.push(value => +value);\r\n                            break;\r\n                        case 'java.lang.Integer':\r\n                        case 'java.lang.Double':\r\n                        case 'java.lang.Float':\r\n                        case 'java.lang.Long':\r\n                        case 'java.lang.Number':\r\n                            fns.push((value) => {\r\n                                if (value !== null && value !== undefined && value !== '') {\r\n                                    return +value;\r\n                                }\r\n                                return null;\r\n                            });\r\n                            break;\r\n                        case 'java.math.BigDecimal':\r\n                            fns.push((value) => {\r\n                                if (value === '' || value === undefined || value === null) {\r\n                                    return null;\r\n                                } else if (typeof value === 'object') {\r\n                                    if (value.value === '' || value.value === undefined || value.value === null) return null;\r\n                                    else return {value: +value.value}\r\n                                } else {\r\n                                    return {value: +value}\r\n                                }\r\n                            });\r\n                            break;\r\n                        case 'java.lang.Boolean':\r\n                            fns.push((value) => {\r\n                                if (value === '' || value === undefined) {\r\n                                    return null;\r\n                                } else if (typeof value === 'string') {\r\n                                    return value === 'true';\r\n                                } else {\r\n                                    return value\r\n                                }\r\n                            });\r\n                            break;\r\n                        default:\r\n                            var type_, isArray = false;\r\n                            if (el.indexOf('java.util.List') === -1) {\r\n                                type_ = el;\r\n                            } else {\r\n                                type_ = el.match(/<(.*)>/);\r\n                                isArray = true;\r\n                                type_ !== null && (type_ = type_[1]);\r\n                            }\r\n                            if (this._domains[type_] !== undefined) {\r\n                                if (isArray === true) {\r\n                                    fns.push((value) => {\r\n                                        if (value !== null && value !== undefined) {\r\n                                            value.forEach((valuei,i) => {\r\n                                                if (valuei !== null && valuei !== undefined) {\r\n                                                    value[i] = this._dataCheck(valuei, type_);\r\n                                                }\r\n                                            })\r\n                                        }\r\n                                        return value;\r\n                                    });\r\n                                } else {\r\n                                    fns.push((value) => {\r\n                                        if (value !== null && value !== undefined) {\r\n                                            value = this._dataCheck(value, type_);\r\n                                        }\r\n                                        return value;\r\n                                    });\r\n                                }\r\n                            } else {\r\n                                fns.push(value => value);\r\n                            }\r\n                            break;\r\n                    }\r\n                });\r\n                methods[method.name] = async(...args) => {\r\n                    if (args.length !== this._service[name][method.name].check.length) {\r\n                        this.emit('error', {\r\n                            host: null,\r\n                            className: clzName,\r\n                            methodName: method.name,\r\n                            param: args,\r\n                            time: 0,\r\n                            error: `调用${clzName}/${method.name}参数不符,期望${this._service[name][method.name].check.length}个,传了${args.length}个!`\r\n                        });\r\n                        throw {\r\n                            stata: 101006,\r\n                            message: `调用${clzName}/${method.name}参数不符,期望${this._service[name][method.name].check.length}个,传了${args.length}个!`,\r\n                            error: `调用${clzName}/${method.name}参数不符,期望${this._service[name][method.name].check.length}个,传了${args.length}个!`\r\n                        };\r\n                    }\r\n                    args.forEach((value, index) => {\r\n                        args[index] = this._service[name][method.name].check[index](value);\r\n                    });\r\n                    return await this._invoke(clzName, method.name, args);\r\n                };\r\n                methods[method.name].check = fns;\r\n            });\r\n            this._service[name] = methods;\r\n            if (this._host[clzName]) {\r\n                this.emit(name, this._host[clzName]);\r\n            }\r\n        });\r\n        this._file_finished = true;\r\n        this._finish_call();\r\n    }\r\n\r\n    async _readNode(node) {\r\n        if (node === undefined) {\r\n            let children = await this._getChildren(`/${this._service_group}`, () => this._readNode());\r\n            children.forEach(child => this._readNode(child));\r\n            this._node_finished = true;\r\n            this._finish_call();\r\n        } else {\r\n            let hosts = [];\r\n            if (this._version[node] === undefined) {\r\n                this._version[node] = [];\r\n            }\r\n            let services = await this._getChildren(`/${this._service_group}/${node}/${vider}`, () => this._readNode(node));\r\n            let consumer = this._consumer();\r\n            let name = node.substr(node.lastIndexOf('.') + 1);\r\n            consumer.query.interface = node;\r\n            consumer.host = `${this._clientHost}/${node}`;\r\n            consumer.query.timestamp = consumer.query['×tamp'] = (new Date()).getTime();\r\n            consumer.query.version = consumer.query.revision = this._service_version || str;\r\n            services.forEach((service) => {\r\n                service = decodeURIComponent(service);\r\n                let ser_param = querystring.parse(service);\r\n                if (this._service_version !== false && (ser_param['default.version'] || ser_param['version']) !== this._service_version) return;\r\n                let ser_host = url.parse(service);\r\n                if (this._ip !== false && ser_host.hostname !== this._ip) return;\r\n                hosts.push(ser_host.host);\r\n                let version = ser_param['default.version'] || ser_param['version'];\r\n                if (this._version[node].indexOf(version) === -1) {\r\n                    this._version[node].push(consumer.query.version = consumer.query.revision = version);\r\n                    this._addNode(`/${this._service_group}/${node}/consumers/${encodeURIComponent(url.format(consumer))}`);\r\n                }\r\n            });\r\n            this._host[node] = hosts;\r\n            if (this._service[name]) {\r\n                this.emit(name, this._host[node]);\r\n            }\r\n        }\r\n    }\r\n\r\n    _finish_call() {\r\n        if (this._file_finished === true && this._node_finished === true && this._called === false) {\r\n            this._called = true;\r\n            this.emit('all');\r\n        }\r\n    }\r\n\r\n    _consumer() {\r\n        return {\r\n            protocol: 'consumer',\r\n            slashes: 'true',\r\n            host: str,\r\n            query: {\r\n                application: this._name,\r\n                category: 'consumers',\r\n                'default.timeout': this._connectTimeout,\r\n                check: 'false',\r\n                dubbo: this._service_version,\r\n                interface: str,\r\n                revision: str,\r\n                version: str,\r\n                side: 'consumer',\r\n                timestamp: str\r\n            }\r\n        };\r\n    }\r\n\r\n    _init() {\r\n        this._host = {};\r\n        this._version = {};\r\n        this._called = false;\r\n        this._client.once('connected', () => {\r\n            this._getChildren = tool.P(this._client.getChildren, this._client);\r\n            this._exists = tool.P(this._client.exists, this._client);\r\n            this._createNode = tool.P(this._client.create, this._client);\r\n            this._readNode();\r\n        }).once('disconnected', () => this._host = {});\r\n        fs.watch('./interface', () => this._readFile());\r\n        this._readFile();\r\n        this._client.connect();\r\n    }\r\n\r\n    async _addNode(node) {\r\n        let stat = await this._exists(node);\r\n        if (stat) return;\r\n        this._createNode(node, 1);\r\n    }\r\n\r\n    _random(arr) {\r\n        return arr[Math.floor(Math.random() * arr.length)];\r\n    }\r\n\r\n    _invoke(clzName, methodName, args) {\r\n        return new Promise((resolve,reject) => {\r\n            let begin = +new Date();\r\n            if (this._host[clzName] === undefined || this._host[clzName].length === 0) {\r\n                this.emit('error', {\r\n                    host: null,\r\n                    className: clzName,\r\n                    methodName: methodName,\r\n                    param: args,\r\n                    time: 0,\r\n                    error: `${clzName}/${methodName}zk中找不到对应的服务节点`\r\n                });\r\n                throw {\r\n                    message: `${clzName}/${methodName}zk中找不到对应的服务节点`,\r\n                    error: `${clzName}/${methodName}zk中找不到对应的服务节点`,\r\n                    state: 101002\r\n                };\r\n            }\r\n            let host = this._random(this._host[clzName]);\r\n            let domain_ = domain.create();\r\n            domain_.on('error', (err) => {\r\n                if (err.code && err.code.toString() === 'ECONNREFUSED') {\r\n                    let end = +new Date();\r\n                    this.emit('error', {\r\n                        host: host,\r\n                        className: clzName,\r\n                        methodName: methodName,\r\n                        param: args,\r\n                        time: end - begin,\r\n                        error: `${host}/${clzName}/${methodName}连接失败!`\r\n                    });\r\n                    reject({\r\n                        message: `${host}/${clzName}/${methodName}连接失败!`,\r\n                        error: `${host}/${clzName}/${methodName}连接失败!`,\r\n                        state: 101005\r\n                    });\r\n                } else {\r\n                    let end = +new Date();\r\n                    this.emit('error', {\r\n                        host: host,\r\n                        className: clzName,\r\n                        methodName: methodName,\r\n                        param: args,\r\n                        time: end - begin,\r\n                        error: `${host}/${clzName}/${methodName}发生未知异常:${JSON.stringify(err)}!`\r\n                    });\r\n                    reject({\r\n                        message: `${host}/${clzName}/${methodName}发生未知异常:${JSON.stringify(err)}!`,\r\n                        error: `${host}/${clzName}/${methodName}发生未知异常:${JSON.stringify(err)}!`,\r\n                        state: 101004\r\n                    });\r\n                }\r\n            });\r\n            domain_.run(() => {\r\n                var proxy = new hessian.Proxy(`http://${host}/${clzName}`, this._username, this._password, proxy);\r\n                proxy.invoke(methodName, args, (err, reply) => {\r\n                    if (reply && reply.fault === true) {\r\n                        let end = +new Date();\r\n                        this.emit('error', {\r\n                            host: host,\r\n                            className: clzName,\r\n                            methodName: methodName,\r\n                            param: args,\r\n                            time: end - begin,\r\n                            error: `${host}/${clzName}/${methodName}发生故障!`\r\n                        });\r\n                        reject({\r\n                            message: `${host}/${clzName}/${methodName}发生故障!`,\r\n                            error: `${host}/${clzName}/${methodName}发生故障!`,\r\n                            state: 101004\r\n                        });\r\n                    } else if (err) {\r\n                        let end = +new Date();\r\n                        this.emit('error', {\r\n                            host: host,\r\n                            className: clzName,\r\n                            methodName: methodName,\r\n                            param: args,\r\n                            time: end - begin,\r\n                            error: `${host}/${clzName}/${methodName}发生异常${JSON.stringify(err)}!`\r\n                        });\r\n                        reject({\r\n                            message: `${host}/${clzName}/${methodName}发生异常${JSON.stringify(err)}!`,\r\n                            error: `${host}/${clzName}/${methodName}发生异常${JSON.stringify(err)}!`,\r\n                            state: 101004\r\n                        });\r\n                    } else {\r\n                        let end = +new Date();\r\n                        this.emit('data', {\r\n                            host: host,\r\n                            className: clzName,\r\n                            methodName: methodName,\r\n                            param: args,\r\n                            time: end - begin,\r\n                            data: reply\r\n                        });\r\n                        if (this._data) {\r\n                            try{\r\n                                resolve(this._data(reply));\r\n                            }catch(error){\r\n                                this.emit('error', {\r\n                                    host: host,\r\n                                    className: clzName,\r\n                                    methodName: methodName,\r\n                                    param: args,\r\n                                    time: end - begin,\r\n                                    error: `${host}/${clzName}/${methodName}发生异常${JSON.stringify(error)}!`\r\n                                });\r\n                                reject(error);\r\n                            }\r\n                        } else {\r\n                            resolve(reply);\r\n                        }\r\n                    }\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    _dataCheck(domain, fullName) {\r\n        let fn = this._domains[fullName];\r\n        var pre = {};\r\n        if (domain === false) {\r\n            Object.keys(fn).forEach(i => pre[i] = fn[i](null))\r\n        } else {\r\n            Object.keys(domain).forEach(i => fn.hasOwnProperty(i) && (pre[i] = fn[i](domain[i])))\r\n        }\r\n        pre.__type__ = fullName;\r\n        return pre;\r\n    }\r\n}\r\nmodule.exports = exports.default;"]}