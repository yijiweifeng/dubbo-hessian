{"version":3,"sources":["../src/index.js"],"names":["require","default","global","Promise","str","vider","readDir","P","readdir","parser2","Adubbo","Dubbo","name","zk","host","connectTimeout","retries","dubbo_version","service_version","service_group","strictString","ip","username","password","data","existsSync","_client","createClient","_connectTimeout","_name","_service_version","_service_group","_strictString","_ip","_clientHost","_username","_password","_data","_init","one","param","on","event","fn","invoke","clzName","methodName","args","_invoke","_readFile","type","domains","_domains","forEach","ele","index","fns","substr","lastIndexOf","methods","method","regs","exec","ret","value","undefined","stringSafeChange","firstLowCase","_dataCheck","services","_service","el","push","type_","isArray","indexOf","match","valuei","i","length","check","emit","className","time","error","stata","message","_host","_file_finished","_finish_call","_readNode","node","_getChildren","children","child","_node_finished","hosts","_version","consumer","_consumer","query","interface","timestamp","Date","getTime","version","revision","service","decodeURIComponent","ser_param","parse","ser_host","hostname","_addNode","encodeURIComponent","format","_called","protocol","slashes","application","category","dubbo","side","once","getChildren","_exists","exists","_createNode","create","watch","connect","stat","_random","arr","Math","floor","random","resolve","reject","begin","state","domain_","err","code","toString","end","run","proxy","Proxy","reply","fault","domain","fullName","pre","hasOwnProperty","__type__","EventEmitter","module","exports"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAGA;;;;AACA;;;;AACA;;;;AAEA;;;;;;AAEAA,QAAQ,+BAAR,EAAyCC,OAAzC,GAAmDD,QAAQ,UAAR,CAAnD;AACAE,OAAOC,OAAP,GAAiBH,QAAQ,UAAR,CAAjB;;AAEA,IAAII,MAAM,EAAV;AAAA,IACIC,QAAQ,WADZ;AAEA,IAAIC,UAAU,kBAAKC,CAAL,CAAO,aAAGC,OAAV,CAAd;AACA,IAAIC,UAAU,kBAAKF,CAAL,mCAAd;;AAEA,IAAIG,SAAS,KAAb;;IAEqBC,K;;;AACjB,qBAAqP;AAAA,yEAAJ,EAAI;;AAAA,6BAAxOC,IAAwO;AAAA,YAAxOA,IAAwO,6BAAjO,aAAiO;AAAA,YAAlNC,EAAkN,QAAlNA,EAAkN;AAAA,6BAA9MC,IAA8M;AAAA,YAA9MA,IAA8M,6BAAvM,WAAuM;AAAA,uCAA1LC,cAA0L;AAAA,YAA1LA,cAA0L,uCAAzK,IAAyK;AAAA,gCAAnKC,OAAmK;AAAA,YAAnKA,OAAmK,gCAAzJ,CAAyJ;AAAA,sCAAtJC,aAAsJ;AAAA,YAAtJA,aAAsJ,sCAAtI,OAAsI;AAAA,wCAA7HC,eAA6H;AAAA,YAA7HA,eAA6H,wCAA3G,KAA2G;AAAA,sCAApGC,aAAoG;AAAA,YAApGA,aAAoG,sCAApF,OAAoF;AAAA,qCAA3EC,YAA2E;AAAA,YAA3EA,YAA2E,qCAA5D,IAA4D;AAAA,2BAAtDC,EAAsD;AAAA,YAAtDA,EAAsD,2BAAjD,KAAiD;AAAA,iCAA1CC,QAA0C;AAAA,YAA1CA,QAA0C,iCAA/B,EAA+B;AAAA,iCAA3BC,QAA2B;AAAA,YAA3BA,QAA2B,iCAAhB,EAAgB;AAAA,YAAZC,IAAY,QAAZA,IAAY;AAAA;;AACjP,YAAI,CAACX,EAAL,EAAS;AACL,kBAAM,WAAN;AACH;AACD,YAAI,aAAGY,UAAH,CAAc,aAAd,MAAiC,KAArC,EAA4C;AACxC,kBAAM,iBAAN;AACH;;AANgP,mEAOjP,+BAPiP;;AAQjP,cAAKC,OAAL,GAAe,8BAAUC,YAAV,CAAuBd,EAAvB,EAA2B;AACtCE,4BAAgBA,cADsB;AAEtCC,qBAASA;AAF6B,SAA3B,CAAf;AAIA,cAAKY,eAAL,GAAuBb,cAAvB;AACA,cAAKc,KAAL,GAAajB,IAAb;AACA,cAAKkB,gBAAL,GAAwBb,aAAxB;AACA,cAAKa,gBAAL,GAAwBZ,eAAxB;AACA,cAAKa,cAAL,GAAsBZ,aAAtB;AACA,cAAKa,aAAL,GAAqBZ,YAArB;AACA,cAAKa,GAAL,GAAWZ,EAAX;AACA,cAAKa,WAAL,GAAmBpB,IAAnB;AACA,cAAKqB,SAAL,GAAiBb,QAAjB;AACA,cAAKc,SAAL,GAAiBb,QAAjB;AACA,cAAKc,KAAL,GAAab,IAAb;AACA,cAAKc,KAAL;AAvBiP;AAwBpP;;UAEMC,G,gBAAIC,K,EAAO;AACd,YAAI9B,WAAW,KAAf,EAAsB;AAClBA,qBAAS,IAAIC,KAAJ,CAAU6B,KAAV,CAAT;AACH;AACD,eAAO,IAAP;AACH,K;;UAEMC,E,eAAGC,K,EAAOC,E,EAAI;AACjB,YAAIjC,WAAW,KAAf,EAAsB;AAClBA,mBAAO+B,EAAP,CAAUC,KAAV,EAAiBC,EAAjB;AACH;AACD,eAAO,IAAP;AACH,K;;UAUMC,M,mBAAOC,O,EAASC,U,EAAYC,I,EAAKjC,I,EAAK;AACzC,eAAOJ,OAAOsC,OAAP,CAAeH,OAAf,EAAwBC,UAAxB,EAAoCC,IAApC,EAAyCjC,IAAzC,CAAP;AACH,K;;oBAEKmC,S;;;;gBAAUC,I,yDAAO,C;;;;;kCAChBA,OAAO,C;;;;;;;;;;;;uDACc5C,QAAQ,oBAAR,C;;;AAAhB6C,uD;;AACJ,uDAAKC,QAAL,GAAgB,EAAhB;AACAD,wDAAQE,OAAR,CAAgB,UAACC,GAAD,EAAMC,KAAN;AAAA,2DAAgBJ,QAAQI,KAAR,4BAAuCD,GAAvD;AAAA,iDAAhB;;uDACgB7C,QAAQ0C,OAAR,C;;;AAAhBA,uD;;AACA,oEAAYA,OAAZ,EAAqBE,OAArB,CAA6B,mBAAW;AACpC,wDAAIG,MAAM,EAAV;AACA,wDAAI5C,OAAOiC,QAAQY,MAAR,CAAeZ,QAAQa,WAAR,CAAoB,GAApB,IAA2B,CAA1C,CAAX;AACAP,4DAAQN,OAAR,EAAiBc,OAAjB,CAAyBN,OAAzB,CAAiC,UAACO,MAAD,EAAY;AACzC,4DAAIC,OAAO,YAAYC,IAAZ,CAAiBF,OAAOhD,IAAxB,CAAX;AACA,4DAAIiD,SAAS,IAAb,EAAmB;AACf,gEAAIX,OAAOU,OAAOG,GAAlB;AAAA,gEAAuBpB,EAAvB;AACA,oEAAQO,IAAR;AACI,qEAAK,kBAAL;AACIP,yEAAK,YAACqB,KAAD,EAAW;AACZ,4EAAIA,UAAU,IAAV,IAAkBA,UAAUC,SAA5B,IAAyCD,UAAU,MAAvD,EAA+D;AAC3D,mFAAO,IAAP;AACH;AACD,+EAAO,kBAAKE,gBAAL,CAAsB,OAAKlC,aAA3B,EAA0CgC,QAAQ5D,GAAlD,CAAP;AACH,qEALD;AAMA;AACJ,qEAAK,KAAL;AACA,qEAAK,OAAL;AACA,qEAAK,QAAL;AACA,qEAAK,MAAL;AACIuC,yEAAK,YAACqB,KAAD,EAAW;AACZ,4EAAIA,UAAU,EAAV,IAAgBA,UAAUC,SAA1B,IAAuCD,UAAU,IAArD,EAA2D;AACvD,mFAAO,CAAP;AACH;AACD,+EAAO,CAACA,KAAR;AACH,qEALD;AAMA;AACJ,qEAAK,mBAAL;AACA,qEAAK,kBAAL;AACA,qEAAK,iBAAL;AACA,qEAAK,gBAAL;AACA,qEAAK,kBAAL;AACIrB,yEAAK,YAACqB,KAAD,EAAW;AACZ,4EAAIA,UAAU,EAAV,IAAgBA,UAAUC,SAA1B,IAAuCD,UAAU,IAArD,EAA2D;AACvD,mFAAO,IAAP;AACH;AACD,+EAAO,CAACA,KAAR;AACH,qEALD;AAMA;AACJ,qEAAK,sBAAL;AACIrB,yEAAK,YAACqB,KAAD,EAAW;AACZ,4EAAIA,UAAU,EAAV,IAAgBA,UAAUC,SAA1B,IAAuCD,UAAU,IAArD,EAA2D;AACvD,mFAAO,IAAP;AACH,yEAFD,MAEO,IAAI,QAAOA,KAAP,uDAAOA,KAAP,OAAiB,QAArB,EAA+B;AAClC,gFAAIA,MAAMA,KAAN,KAAgB,EAAhB,IAAsBA,MAAMA,KAAN,KAAgBC,SAAtC,IAAmDD,MAAMA,KAAN,KAAgB,IAAvE,EAA6E,OAAO,IAAP,CAA7E,KACK,OAAO,EAACA,OAAO,CAACA,MAAMA,KAAf,EAAP;AACR,yEAHM,MAGA;AACH,mFAAO,EAACA,OAAO,CAACA,KAAT,EAAP;AACH;AACJ,qEATD;AAUA;AACJ,qEAAK,SAAL;AACIrB,yEAAK,YAACqB,KAAD,EAAW;AACZ,4EAAIA,UAAU,EAAV,IAAgBA,UAAUC,SAA1B,IAAuCD,UAAU,IAArD,EAA2D;AACvD,mFAAO,KAAP;AACH,yEAFD,MAEO,IAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAClC,mFAAOA,UAAU,MAAjB;AACH,yEAFM,MAEA;AACH,mFAAOA,KAAP;AACH;AACJ,qEARD;AASA;AACJ,qEAAK,mBAAL;AACIrB,yEAAK,YAACqB,KAAD,EAAW;AACZ,4EAAIA,UAAU,EAAV,IAAgBA,UAAUC,SAA9B,EAAyC;AACrC,mFAAO,IAAP;AACH,yEAFD,MAEO,IAAI,OAAOD,KAAP,KAAiB,QAArB,EAA+B;AAClC,mFAAOA,UAAU,MAAjB;AACH,yEAFM,MAEA;AACH,mFAAOA,KAAP;AACH;AACJ,qEARD;AASA;AACJ;AACIrB,yEAAK;AAAA,+EAASqB,KAAT;AAAA,qEAAL;AACA;AApER;AAsEAR,gEAAI,kBAAKW,YAAL,CAAkBN,KAAK,CAAL,CAAlB,CAAJ,IAAkClB,EAAlC;AACH;AACJ,qDA5ED;AA6EA,2DAAKS,QAAL,CAAcP,OAAd,IAAyBW,GAAzB;AACA,2DAAKJ,QAAL,CAAcxC,IAAd,IAAsB;AAAA,+DAAM,OAAKwD,UAAL,CAAgB,KAAhB,EAAuBvB,OAAvB,CAAN;AAAA,qDAAtB;AACH,iDAlFD;;;;;;;;;;;kCAqFDK,SAAS,C;;;;;;;;;;;;uDACa5C,QAAQ,qBAAR,C;;;AAAjB+D,wD;;AACJ,uDAAKC,QAAL,GAAgB,EAAhB;AACAD,yDAAShB,OAAT,CAAiB,UAACC,GAAD,EAAMC,KAAN;AAAA,2DAAgBc,SAASd,KAAT,6BAAyCD,GAAzD;AAAA,iDAAjB;;uDACiB7C,QAAQ4D,QAAR,C;;;AAAjBA,wD;;AACA,oEAAYA,QAAZ,EAAsBhB,OAAtB,CAA8B,mBAAW;AACrC,wDAAIM,UAAU,EAAd;AACA,wDAAI/C,OAAOiC,QAAQY,MAAR,CAAeZ,QAAQa,WAAR,CAAoB,GAApB,IAA2B,CAA1C,CAAX;AACAW,6DAASxB,OAAT,EAAkBc,OAAlB,CAA0BN,OAA1B,CAAkC,UAACO,MAAD,EAAY;AAC1C,4DAAIJ,MAAM,EAAV;AACAI,+DAAOb,IAAP,CAAYM,OAAZ,CAAoB,UAACkB,EAAD,EAAQ;AACxB,oEAAQA,EAAR;AACI,qEAAK,kBAAL;AACIf,wEAAIgB,IAAJ,CAAS,UAACR,KAAD,EAAW;AAChB,4EAAIA,UAAU,IAAV,IAAkBA,UAAUC,SAA5B,IAAyCD,UAAU,MAAvD,EAA+D;AAC3D,mFAAO,IAAP;AACH;AACD,+EAAO,kBAAKE,gBAAL,CAAsB,OAAKlC,aAA3B,EAAyCgC,QAAQ5D,GAAjD,CAAP;AACH,qEALD;AAMA;AACJ,qEAAK,KAAL;AACA,qEAAK,OAAL;AACA,qEAAK,QAAL;AACA,qEAAK,MAAL;AACIoD,wEAAIgB,IAAJ,CAAS;AAAA,+EAAS,CAACR,KAAV;AAAA,qEAAT;AACA;AACJ,qEAAK,mBAAL;AACA,qEAAK,kBAAL;AACA,qEAAK,iBAAL;AACA,qEAAK,gBAAL;AACA,qEAAK,kBAAL;AACIR,wEAAIgB,IAAJ,CAAS,UAACR,KAAD,EAAW;AAChB,4EAAIA,UAAU,IAAV,IAAkBA,UAAUC,SAA5B,IAAyCD,UAAU,EAAvD,EAA2D;AACvD,mFAAO,CAACA,KAAR;AACH;AACD,+EAAO,IAAP;AACH,qEALD;AAMA;AACJ,qEAAK,sBAAL;AACIR,wEAAIgB,IAAJ,CAAS,UAACR,KAAD,EAAW;AAChB,4EAAIA,UAAU,EAAV,IAAgBA,UAAUC,SAA1B,IAAuCD,UAAU,IAArD,EAA2D;AACvD,mFAAO,IAAP;AACH,yEAFD,MAEO,IAAI,QAAOA,KAAP,uDAAOA,KAAP,OAAiB,QAArB,EAA+B;AAClC,gFAAIA,MAAMA,KAAN,KAAgB,EAAhB,IAAsBA,MAAMA,KAAN,KAAgBC,SAAtC,IAAmDD,MAAMA,KAAN,KAAgB,IAAvE,EAA6E,OAAO,IAAP,CAA7E,KACK,OAAO,EAACA,OAAO,CAACA,MAAMA,KAAf,EAAP;AACR,yEAHM,MAGA;AACH,mFAAO,EAACA,OAAO,CAACA,KAAT,EAAP;AACH;AACJ,qEATD;AAUA;AACJ,qEAAK,mBAAL;AACIR,wEAAIgB,IAAJ,CAAS,UAACR,KAAD,EAAW;AAChB,4EAAIA,UAAU,EAAV,IAAgBA,UAAUC,SAA9B,EAAyC;AACrC,mFAAO,IAAP;AACH,yEAFD,MAEO,IAAI,OAAOD,KAAP,KAAiB,QAArB,EAA+B;AAClC,mFAAOA,UAAU,MAAjB;AACH,yEAFM,MAEA;AACH,mFAAOA,KAAP;AACH;AACJ,qEARD;AASA;AACJ;AACI,wEAAIS,KAAJ;AAAA,wEAAWC,UAAU,KAArB;AACA,wEAAIH,GAAGI,OAAH,CAAW,gBAAX,MAAiC,CAAC,CAAtC,EAAyC;AACrCF,gFAAQF,EAAR;AACH,qEAFD,MAEO;AACHE,gFAAQF,GAAGK,KAAH,CAAS,QAAT,CAAR;AACAF,kFAAU,IAAV;AACAD,kFAAU,IAAV,KAAmBA,QAAQA,MAAM,CAAN,CAA3B;AACH;AACD,wEAAI,OAAKrB,QAAL,CAAcqB,KAAd,MAAyBR,SAA7B,EAAwC;AACpC,4EAAIS,YAAY,IAAhB,EAAsB;AAClBlB,gFAAIgB,IAAJ,CAAS,UAACR,KAAD,EAAW;AAChB,oFAAIA,UAAU,IAAV,IAAkBA,UAAUC,SAAhC,EAA2C;AACvCD,0FAAMX,OAAN,CAAc,UAACwB,MAAD,EAAQC,CAAR,EAAc;AACxB,4FAAID,WAAW,IAAX,IAAmBA,WAAWZ,SAAlC,EAA6C;AACzCD,kGAAMc,CAAN,IAAW,OAAKV,UAAL,CAAgBS,MAAhB,EAAwBJ,KAAxB,CAAX;AACH;AACJ,qFAJD;AAKH;AACD,uFAAOT,KAAP;AACH,6EATD;AAUH,yEAXD,MAWO;AACHR,gFAAIgB,IAAJ,CAAS,UAACR,KAAD,EAAW;AAChB,oFAAIA,UAAU,IAAV,IAAkBA,UAAUC,SAAhC,EAA2C;AACvCD,4FAAQ,OAAKI,UAAL,CAAgBJ,KAAhB,EAAuBS,KAAvB,CAAR;AACH;AACD,uFAAOT,KAAP;AACH,6EALD;AAMH;AACJ,qEApBD,MAoBO;AACHR,4EAAIgB,IAAJ,CAAS;AAAA,mFAASR,KAAT;AAAA,yEAAT;AACH;AACD;AAlFR;AAoFH,yDArFD;AAsFAL,gEAAQC,OAAOhD,IAAf;AAAA,mIAAuB;AAAA,kGAASmC,IAAT;AAASA,wEAAT;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,sFACfA,KAAKgC,MAAL,KAAgB,OAAKT,QAAL,CAAc1D,IAAd,EAAoBgD,OAAOhD,IAA3B,EAAiCoE,KAAjC,CAAuCD,MADxC;AAAA;AAAA;AAAA;;AAEf,uFAAKE,IAAL,CAAU,OAAV,EAAmB;AACfnE,0FAAM,IADS;AAEfoE,+FAAWrC,OAFI;AAGfC,gGAAYc,OAAOhD,IAHJ;AAIf4B,2FAAOO,IAJQ;AAKfoC,0FAAM,CALS;AAMfC,kGAAYvC,OAAZ,SAAuBe,OAAOhD,IAA9B,eAA4C,OAAK0D,QAAL,CAAc1D,IAAd,EAAoBgD,OAAOhD,IAA3B,EAAiCoE,KAAjC,CAAuCD,MAAnF,YAAgGhC,KAAKgC,MAArG;AANe,iFAAnB;AAFe,sFAUT;AACFM,2FAAO,MADL;AAEFC,oGAAczC,OAAd,SAAyBe,OAAOhD,IAAhC,eAA8C,OAAK0D,QAAL,CAAc1D,IAAd,EAAoBgD,OAAOhD,IAA3B,EAAiCoE,KAAjC,CAAuCD,MAArF,YAAkGhC,KAAKgC,MAAvG,OAFE;AAGFK,kGAAYvC,OAAZ,SAAuBe,OAAOhD,IAA9B,eAA4C,OAAK0D,QAAL,CAAc1D,IAAd,EAAoBgD,OAAOhD,IAA3B,EAAiCoE,KAAjC,CAAuCD,MAAnF,YAAgGhC,KAAKgC,MAArG;AAHE,iFAVS;;AAAA;AAgBnBhC,qFAAKM,OAAL,CAAa,UAACW,KAAD,EAAQT,KAAR,EAAkB;AAC3BR,yFAAKQ,KAAL,IAAc,OAAKe,QAAL,CAAc1D,IAAd,EAAoBgD,OAAOhD,IAA3B,EAAiCoE,KAAjC,CAAuCzB,KAAvC,EAA8CS,KAA9C,CAAd;AACH,iFAFD;AAhBmB;AAAA,uFAmBN,OAAKhB,OAAL,CAAaH,OAAb,EAAsBe,OAAOhD,IAA7B,EAAmCmC,IAAnC,CAnBM;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DAAvB;;AAAA;AAAA;AAAA;AAAA;AAqBAY,gEAAQC,OAAOhD,IAAf,EAAqBoE,KAArB,GAA6BxB,GAA7B;AACH,qDA9GD;AA+GA,2DAAKc,QAAL,CAAc1D,IAAd,IAAsB+C,OAAtB;AACA,wDAAI,OAAK4B,KAAL,CAAW1C,OAAX,CAAJ,EAAyB;AACrB,+DAAKoC,IAAL,CAAUrE,IAAV,EAAgB,OAAK2E,KAAL,CAAW1C,OAAX,CAAhB;AACH;AACJ,iDAtHD;;;;;;;;;;;;AAyHJ,gCAAGK,SAAS,CAAZ,EAAc;AACV,qCAAKsC,cAAL,GAAsB,IAAtB;AACA,qCAAKC,YAAL;AACH;;;;;;;;;;;;;;;;;oBAGCC,S;iGAAUC,I;;;;;;;;kCACRA,SAAS1B,S;;;;;;mCACY,KAAK2B,YAAL,OAAsB,KAAK7D,cAA3B,EAA6C;AAAA,uCAAM,OAAK2D,SAAL,EAAN;AAAA,6BAA7C,C;;;AAAjBG,oC;;AACJA,qCAASxC,OAAT,CAAiB;AAAA,uCAAS,OAAKqC,SAAL,CAAeI,KAAf,CAAT;AAAA,6BAAjB;AACA,iCAAKC,cAAL,GAAsB,IAAtB;AACA,iCAAKN,YAAL;AACA,iCAAKR,IAAL,CAAU,MAAV;;;;;;;;;;;AAEIe,qD,GAAQ,E;;AACZ,oDAAI,OAAKC,QAAL,CAAcN,IAAd,MAAwB1B,SAA5B,EAAuC;AACnC,2DAAKgC,QAAL,CAAcN,IAAd,IAAsB,EAAtB;AACH;;uDACoB,OAAKC,YAAL,OAAsB,OAAK7D,cAA3B,SAA6C4D,IAA7C,SAAqDtF,KAArD,EAA8D;AAAA,2DAAM,OAAKqF,SAAL,CAAeC,IAAf,CAAN;AAAA,iDAA9D,C;;;AAAjBtB,wD;AACA6B,wD,GAAW,OAAKC,SAAL,E;AACXvF,oD,GAAO+E,KAAKlC,MAAL,CAAYkC,KAAKjC,WAAL,CAAiB,GAAjB,IAAwB,CAApC,C;;AACXwC,yDAASE,KAAT,CAAeC,SAAf,GAA2BV,IAA3B;AACAO,yDAASpF,IAAT,GAAmB,OAAKoB,WAAxB,SAAuCyD,IAAvC;AACAO,yDAASE,KAAT,CAAeE,SAAf,GAA2BJ,SAASE,KAAT,CAAe,OAAf,IAA2B,IAAIG,IAAJ,EAAD,CAAaC,OAAb,EAArD;AACAN,yDAASE,KAAT,CAAeK,OAAf,GAAyBP,SAASE,KAAT,CAAeM,QAAf,GAA0B,OAAK5E,gBAAL,IAAyB1B,GAA5E;AACAiE,yDAAShB,OAAT,CAAiB,UAACsD,OAAD,EAAa;AAC1BA,8DAAUC,mBAAmBD,OAAnB,CAAV;AACA,wDAAIE,YAAY,sBAAYC,KAAZ,CAAkBH,OAAlB,CAAhB;AACA,wDAAI,OAAK7E,gBAAL,KAA0B,KAA1B,IAAmC,CAAC+E,UAAU,iBAAV,KAAgCA,UAAU,SAAV,CAAjC,MAA2D,OAAK/E,gBAAvG,EAAyH;AACzH,wDAAIiF,WAAW,cAAID,KAAJ,CAAUH,OAAV,CAAf;AACA,wDAAI,OAAK1E,GAAL,KAAa,KAAb,IAAsB8E,SAASC,QAAT,KAAsB,OAAK/E,GAArD,EAA0D;AAC1D+D,0DAAMxB,IAAN,CAAWuC,SAASjG,IAApB;AACA,wDAAI2F,UAAUI,UAAU,iBAAV,KAAgCA,UAAU,SAAV,CAA9C;AACA,wDAAI,OAAKZ,QAAL,CAAcN,IAAd,EAAoBhB,OAApB,CAA4B8B,OAA5B,MAAyC,CAAC,CAA9C,EAAiD;AAC7C,+DAAKR,QAAL,CAAcN,IAAd,EAAoBnB,IAApB,CAAyB0B,SAASE,KAAT,CAAeK,OAAf,GAAyBP,SAASE,KAAT,CAAeM,QAAf,GAA0BD,OAA5E;AACA,+DAAKQ,QAAL,OAAkB,OAAKlF,cAAvB,SAAyC4D,IAAzC,mBAA2DuB,mBAAmB,cAAIC,MAAJ,CAAWjB,QAAX,CAAnB,CAA3D;AACH;AACJ,iDAZD;AAaA,uDAAKX,KAAL,CAAWI,IAAX,IAAmBK,KAAnB;AACA,oDAAI,OAAK1B,QAAL,CAAc1D,IAAd,CAAJ,EAAyB;AACrB,2DAAKqE,IAAL,CAAUrE,IAAV,EAAgB,OAAK2E,KAAL,CAAWI,IAAX,CAAhB;AACH;AACD,uDAAKV,IAAL,CAAU,UAAUrE,IAApB,EAA0B,OAAK2E,KAAL,CAAWI,IAAX,CAA1B;;;;;;;;;;;;;;;;;;;;;;;;;oBAIRF,Y,2BAAe;AACX,YAAI,KAAKD,cAAL,KAAwB,IAAxB,IAAgC,KAAKO,cAAL,KAAwB,IAAxD,IAAgE,KAAKqB,OAAL,KAAiB,KAArF,EAA4F;AACxF,iBAAKA,OAAL,GAAe,IAAf;AACA,iBAAKnC,IAAL,CAAU,KAAV;AACH;AACJ,K;;oBAEDkB,S,wBAAY;AACR,eAAO;AACHkB,sBAAU,UADP;AAEHC,qBAAS,MAFN;AAGHxG,kBAAMV,GAHH;AAIHgG,mBAAO;AACHmB,6BAAa,KAAK1F,KADf;AAEH2F,0BAAU,WAFP;AAGH,mCAAmB,KAAK5F,eAHrB;AAIHoD,uBAAO,OAJJ;AAKHyC,uBAAO,KAAK3F,gBALT;AAMHuE,2BAAWjG,GANR;AAOHsG,0BAAUtG,GAPP;AAQHqG,yBAASrG,GARN;AASHsH,sBAAM,UATH;AAUHpB,2BAAWlG;AAVR;AAJJ,SAAP;AAiBH,K;;oBAEDkC,K,oBAAQ;AAAA;;AACJ,aAAKiD,KAAL,GAAa,EAAb;AACA,aAAKU,QAAL,GAAgB,EAAhB;AACA,aAAK7C,QAAL,GAAgB,EAAhB;AACA,aAAKkB,QAAL,GAAgB,EAAhB;AACA,aAAK8C,OAAL,GAAe,KAAf;AACA,aAAK1F,OAAL,CAAaiG,IAAb,CAAkB,WAAlB,EAA+B,YAAM;AACjC,mBAAK/B,YAAL,GAAoB,kBAAKrF,CAAL,CAAO,OAAKmB,OAAL,CAAakG,WAApB,EAAiC,OAAKlG,OAAtC,CAApB;AACA,mBAAKmG,OAAL,GAAe,kBAAKtH,CAAL,CAAO,OAAKmB,OAAL,CAAaoG,MAApB,EAA4B,OAAKpG,OAAjC,CAAf;AACA,mBAAKqG,WAAL,GAAmB,kBAAKxH,CAAL,CAAO,OAAKmB,OAAL,CAAasG,MAApB,EAA4B,OAAKtG,OAAjC,CAAnB;AACA,mBAAKgE,SAAL;AACH,SALD,EAKGiC,IALH,CAKQ,cALR,EAKwB;AAAA,mBAAM,OAAKpC,KAAL,GAAa,EAAnB;AAAA,SALxB;;AAOA,qBAAG0C,KAAH,CAAS,oBAAT,EAA+B;AAAA,mBAAM,OAAKhF,SAAL,CAAe,CAAf,CAAN;AAAA,SAA/B;AACA,qBAAGgF,KAAH,CAAS,qBAAT,EAAgC;AAAA,mBAAM,OAAKhF,SAAL,CAAe,CAAf,CAAN;AAAA,SAAhC;AACA,aAAKA,SAAL;AACA,aAAKvB,OAAL,CAAawG,OAAb;AACH,K;;oBAEKjB,Q;iGAAStB,I;;;;;;;mCACM,KAAKkC,OAAL,CAAalC,IAAb,C;;;AAAbwC,gC;;iCACAA,I;;;;;;;;AACJ,iCAAKJ,WAAL,CAAiBpC,IAAjB,EAAuB,CAAvB;;;;;;;;;;;;;;;;;oBAGJyC,O,oBAAQC,G,EAAK;AACT,eAAOA,IAAIC,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgBH,IAAItD,MAA/B,CAAJ,CAAP;AACH,K;;oBAED/B,O,oBAAQH,O,EAASC,U,EAAYC,I,EAAKjC,I,EAAM;AAAA;;AACpC,eAAO,sBAAY,UAAC2H,OAAD,EAASC,MAAT,EAAoB;AACnC,gBAAIC,QAAQ,CAAC,IAAIpC,IAAJ,EAAb;AACA,gBAAI,OAAKhB,KAAL,CAAW1C,OAAX,MAAwBoB,SAAxB,IAAqC,OAAKsB,KAAL,CAAW1C,OAAX,EAAoBkC,MAApB,KAA+B,CAAxE,EAA2E;AACvE,uBAAKE,IAAL,CAAU,OAAV,EAAmB;AACfnE,0BAAM,IADS;AAEfoE,+BAAWrC,OAFI;AAGfC,gCAAYA,UAHG;AAIfN,2BAAOO,IAJQ;AAKfoC,0BAAM,CALS;AAMfC,2BAAUvC,OAAV,SAAqBC,UAArB;AANe,iBAAnB;AAQA,sBAAM;AACFwC,6BAAYzC,OAAZ,SAAuBC,UAAvB,kBADE;AAEFsC,2BAAUvC,OAAV,SAAqBC,UAArB,kBAFE;AAGF8F,2BAAO;AAHL,iBAAN;AAKH;AACD,gBAAG9H,SAASmD,SAAZ,EAAsB;AAClBnD,uBAAO,OAAKsH,OAAL,CAAa,OAAK7C,KAAL,CAAW1C,OAAX,CAAb,CAAP;AACH;AACD,gBAAIgG,UAAU,iBAAOb,MAAP,EAAd;AACAa,oBAAQpG,EAAR,CAAW,OAAX,EAAoB,UAACqG,GAAD,EAAS;AACzB,oBAAIA,IAAIC,IAAJ,IAAYD,IAAIC,IAAJ,CAASC,QAAT,OAAwB,cAAxC,EAAwD;AACpD,wBAAIC,MAAM,CAAC,IAAI1C,IAAJ,EAAX;AACA,2BAAKtB,IAAL,CAAU,OAAV,EAAmB;AACfnE,8BAAMA,IADS;AAEfoE,mCAAWrC,OAFI;AAGfC,oCAAYA,UAHG;AAIfN,+BAAOO,IAJQ;AAKfoC,8BAAM8D,MAAMN,KALG;AAMfvD,+BAAUtE,IAAV,SAAkB+B,OAAlB,SAA6BC,UAA7B;AANe,qBAAnB;AAQA4F,2BAAO;AACHpD,iCAAYxE,IAAZ,SAAoB+B,OAApB,SAA+BC,UAA/B,UADG;AAEHsC,+BAAUtE,IAAV,SAAkB+B,OAAlB,SAA6BC,UAA7B,UAFG;AAGH8F,+BAAO;AAHJ,qBAAP;AAKH,iBAfD,MAeO;AACH,wBAAIK,OAAM,CAAC,IAAI1C,IAAJ,EAAX;AACA,2BAAKtB,IAAL,CAAU,OAAV,EAAmB;AACfnE,8BAAMA,IADS;AAEfoE,mCAAWrC,OAFI;AAGfC,oCAAYA,UAHG;AAIfN,+BAAOO,IAJQ;AAKfoC,8BAAM8D,OAAMN,KALG;AAMfvD,+BAAUtE,IAAV,SAAkB+B,OAAlB,SAA6BC,UAA7B,eAAiD,yBAAegG,GAAf,CAAjD;AANe,qBAAnB;AAQAJ,2BAAO;AACHpD,iCAAYxE,IAAZ,SAAoB+B,OAApB,SAA+BC,UAA/B,eAAmD,yBAAegG,GAAf,CAAnD,MADG;AAEH1D,+BAAUtE,IAAV,SAAkB+B,OAAlB,SAA6BC,UAA7B,eAAiD,yBAAegG,GAAf,CAAjD,MAFG;AAGHF,+BAAO;AAHJ,qBAAP;AAKH;AACJ,aAhCD;AAiCAC,oBAAQK,GAAR,CAAY,YAAM;AACd,oBAAIC,QAAQ,IAAI,8BAAQC,KAAZ,aAA4BtI,IAA5B,SAAoC+B,OAApC,EAA+C,OAAKV,SAApD,EAA+D,OAAKC,SAApE,EAA+E+G,KAA/E,CAAZ;AACAA,sBAAMvG,MAAN,CAAaE,UAAb,EAAyBC,IAAzB,EAA+B,UAAC+F,GAAD,EAAMO,KAAN,EAAgB;AAC3C,wBAAIA,SAASA,MAAMC,KAAN,KAAgB,IAA7B,EAAmC;AAC/B,4BAAIL,MAAM,CAAC,IAAI1C,IAAJ,EAAX;AACA,+BAAKtB,IAAL,CAAU,OAAV,EAAmB;AACfnE,kCAAMA,IADS;AAEfoE,uCAAWrC,OAFI;AAGfC,wCAAYA,UAHG;AAIfN,mCAAOO,IAJQ;AAKfoC,kCAAM8D,MAAMN,KALG;AAMfvD,mCAAUtE,IAAV,SAAkB+B,OAAlB,SAA6BC,UAA7B;AANe,yBAAnB;AAQA4F,+BAAO;AACHpD,qCAAYxE,IAAZ,SAAoB+B,OAApB,SAA+BC,UAA/B,UADG;AAEHsC,mCAAUtE,IAAV,SAAkB+B,OAAlB,SAA6BC,UAA7B,UAFG;AAGH8F,mCAAO;AAHJ,yBAAP;AAKH,qBAfD,MAeO,IAAIE,GAAJ,EAAS;AACZ,4BAAIG,QAAM,CAAC,IAAI1C,IAAJ,EAAX;AACA,+BAAKtB,IAAL,CAAU,OAAV,EAAmB;AACfnE,kCAAMA,IADS;AAEfoE,uCAAWrC,OAFI;AAGfC,wCAAYA,UAHG;AAIfN,mCAAOO,IAJQ;AAKfoC,kCAAM8D,QAAMN,KALG;AAMfvD,mCAAUtE,IAAV,SAAkB+B,OAAlB,SAA6BC,UAA7B,YAA8C,yBAAegG,GAAf,CAA9C;AANe,yBAAnB;AAQAJ,+BAAO;AACHpD,qCAAYxE,IAAZ,SAAoB+B,OAApB,SAA+BC,UAA/B,YAAgD,yBAAegG,GAAf,CAAhD,MADG;AAEH1D,mCAAUtE,IAAV,SAAkB+B,OAAlB,SAA6BC,UAA7B,YAA8C,yBAAegG,GAAf,CAA9C,MAFG;AAGHF,mCAAO;AAHJ,yBAAP;AAKH,qBAfM,MAeA;AACH,4BAAIK,QAAM,CAAC,IAAI1C,IAAJ,EAAX;AACA,+BAAKtB,IAAL,CAAU,MAAV,EAAkB;AACdnE,kCAAMA,IADQ;AAEdoE,uCAAWrC,OAFG;AAGdC,wCAAYA,UAHE;AAIdN,mCAAOO,IAJO;AAKdoC,kCAAM8D,QAAMN,KALE;AAMdnH,kCAAM6H;AANQ,yBAAlB;AAQA,4BAAI,OAAKhH,KAAT,EAAgB;AACZ,gCAAG;AACCoG,wCAAQ,OAAKpG,KAAL,CAAWgH,KAAX,CAAR;AACH,6BAFD,CAEC,OAAMjE,KAAN,EAAY;AACT,uCAAKH,IAAL,CAAU,OAAV,EAAmB;AACfnE,0CAAMA,IADS;AAEfoE,+CAAWrC,OAFI;AAGfC,gDAAYA,UAHG;AAIfN,2CAAOO,IAJQ;AAKfoC,0CAAM8D,QAAMN,KALG;AAMfvD,2CAAUtE,IAAV,SAAkB+B,OAAlB,SAA6BC,UAA7B,YAA8C,yBAAesC,KAAf,CAA9C;AANe,iCAAnB;AAQAsD,uCAAOtD,KAAP;AACH;AACJ,yBAdD,MAcO;AACHqD,oCAAQY,KAAR;AACH;AACJ;AACJ,iBA3DD;AA4DH,aA9DD;AA+DH,SArHM,CAAP;AAsHH,K;;oBAEDjF,U,uBAAWmF,M,EAAQC,Q,EAAU;AACzB,YAAI7G,KAAK,KAAKS,QAAL,CAAcoG,QAAd,CAAT;AACA,YAAIC,MAAM,EAAV;AACA,YAAIF,WAAW,KAAf,EAAsB;AAClB,gCAAY5G,EAAZ,EAAgBU,OAAhB,CAAwB;AAAA,uBAAKoG,IAAI3E,CAAJ,IAASnC,GAAGmC,CAAH,EAAM,EAAN,CAAd;AAAA,aAAxB;AACH,SAFD,MAEO;AACH,gCAAYyE,MAAZ,EAAoBlG,OAApB,CAA4B;AAAA,uBAAKV,GAAG+G,cAAH,CAAkB5E,CAAlB,MAAyB2E,IAAI3E,CAAJ,IAASnC,GAAGmC,CAAH,EAAMyE,OAAOzE,CAAP,CAAN,CAAlC,CAAL;AAAA,aAA5B;AACH;AACD2E,YAAIE,QAAJ,GAAeH,QAAf;AACA,eAAOC,GAAP;AACH,K;;;;4BA9coB;AACjB,mBAAO/I,OAAO4D,QAAd;AACH;;;4BAEmB;AAChB,mBAAO5D,OAAO0C,QAAd;AACH;;;EA/C8B,iBAAOwG,Y;;kBAArBjJ,K;;AAyfrBkJ,OAAOC,OAAP,GAAiBA,QAAQ7J,OAAzB","file":"index.js","sourcesContent":["'use strict';\r\nimport url from 'url';\r\nimport events from 'events';\r\nimport fs from 'fs';\r\nimport domain from 'domain';\r\nimport querystring from 'querystring';\r\n\r\n\r\nimport zookeeper from 'node-zookeeper-client';\r\nimport parser from 'java-class-parser-generics';\r\nimport hessian from 'hessian-proxy-garbled';\r\n\r\nimport tool from './toolkit.js';\r\n\r\nrequire('babel-runtime/core-js/promise').default = require('bluebird');\r\nglobal.Promise = require('bluebird');\r\n\r\nlet str = '',\r\n    vider = 'providers';\r\nlet readDir = tool.P(fs.readdir);\r\nlet parser2 = tool.P(parser);\r\n\r\nlet Adubbo = false;\r\n\r\nexport default class Dubbo extends events.EventEmitter {\r\n    constructor({name = 'node_client', zk, host = 'node-host', connectTimeout = 1000, retries = 3, dubbo_version = '2.8.4', service_version = false, service_group = 'dubbo', strictString = true, ip = false, username = '', password = '', data} = {}) {\r\n        if (!zk) {\r\n            throw '必须定义zk地址!';\r\n        }\r\n        if (fs.existsSync('./interface') === false) {\r\n            throw 'interface目录不存在!';\r\n        }\r\n        super();\r\n        this._client = zookeeper.createClient(zk, {\r\n            connectTimeout: connectTimeout,\r\n            retries: retries\r\n        });\r\n        this._connectTimeout = connectTimeout;\r\n        this._name = name;\r\n        this._service_version = dubbo_version;\r\n        this._service_version = service_version;\r\n        this._service_group = service_group;\r\n        this._strictString = strictString;\r\n        this._ip = ip;\r\n        this._clientHost = host;\r\n        this._username = username;\r\n        this._password = password;\r\n        this._data = data;\r\n        this._init();\r\n    }\r\n\r\n    static one(param) {\r\n        if (Adubbo === false) {\r\n            Adubbo = new Dubbo(param);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    static on(event, fn) {\r\n        if (Adubbo !== false) {\r\n            Adubbo.on(event, fn)\r\n        }\r\n        return this;\r\n    }\r\n\r\n    static get service() {\r\n        return Adubbo._service;\r\n    }\r\n\r\n    static get domain() {\r\n        return Adubbo._domains;\r\n    }\r\n\r\n    static invoke(clzName, methodName, args,host){\r\n        return Adubbo._invoke(clzName, methodName, args,host);\r\n    }\r\n\r\n    async _readFile(type = 0) {\r\n        if(type < 2){\r\n            let domains = await readDir('./interface/domain');\r\n            this._domains = {};\r\n            domains.forEach((ele, index) => domains[index] = `./interface/domain/${ele}`);\r\n            domains = await parser2(domains);\r\n            Object.keys(domains).forEach(clzName => {\r\n                let fns = {};\r\n                let name = clzName.substr(clzName.lastIndexOf('.') + 1);\r\n                domains[clzName].methods.forEach((method) => {\r\n                    var regs = /^get(\\w*)/.exec(method.name);\r\n                    if (regs !== null) {\r\n                        var type = method.ret, fn;\r\n                        switch (type) {\r\n                            case 'java.lang.String':\r\n                                fn = (value) => {\r\n                                    if (value === null || value === undefined || value === 'null') {\r\n                                        return null;\r\n                                    }\r\n                                    return tool.stringSafeChange(this._strictString, value + str);\r\n                                };\r\n                                break;\r\n                            case 'int':\r\n                            case 'float':\r\n                            case 'double':\r\n                            case 'long':\r\n                                fn = (value) => {\r\n                                    if (value === '' || value === undefined || value === null) {\r\n                                        return 0;\r\n                                    }\r\n                                    return +value;\r\n                                };\r\n                                break;\r\n                            case 'java.lang.Integer':\r\n                            case 'java.lang.Double':\r\n                            case 'java.lang.Float':\r\n                            case 'java.lang.Long':\r\n                            case 'java.lang.Number':\r\n                                fn = (value) => {\r\n                                    if (value === '' || value === undefined || value === null) {\r\n                                        return null;\r\n                                    }\r\n                                    return +value;\r\n                                };\r\n                                break;\r\n                            case 'java.math.BigDecimal':\r\n                                fn = (value) => {\r\n                                    if (value === '' || value === undefined || value === null) {\r\n                                        return null;\r\n                                    } else if (typeof value === 'object') {\r\n                                        if (value.value === '' || value.value === undefined || value.value === null) return null;\r\n                                        else return {value: +value.value}\r\n                                    } else {\r\n                                        return {value: +value}\r\n                                    }\r\n                                };\r\n                                break;\r\n                            case 'boolean':\r\n                                fn = (value) => {\r\n                                    if (value === '' || value === undefined || value === null) {\r\n                                        return false;\r\n                                    } else if (typeof value === 'string') {\r\n                                        return value === 'true';\r\n                                    } else {\r\n                                        return value\r\n                                    }\r\n                                };\r\n                                break;\r\n                            case 'java.lang.Boolean':\r\n                                fn = (value) => {\r\n                                    if (value === '' || value === undefined) {\r\n                                        return null;\r\n                                    } else if (typeof value === 'string') {\r\n                                        return value === 'true';\r\n                                    } else {\r\n                                        return value\r\n                                    }\r\n                                };\r\n                                break;\r\n                            default:\r\n                                fn = value => value;\r\n                                break;\r\n                        }\r\n                        fns[tool.firstLowCase(regs[1])] = fn;\r\n                    }\r\n                });\r\n                this._domains[clzName] = fns;\r\n                this._domains[name] = () => this._dataCheck(false, clzName);\r\n            });\r\n        }\r\n\r\n        if(type !== 1){\r\n            let services = await readDir('./interface/service');\r\n            this._service = {};\r\n            services.forEach((ele, index) => services[index] = `./interface/service/${ele}`);\r\n            services = await parser2(services);\r\n            Object.keys(services).forEach(clzName => {\r\n                let methods = {};\r\n                let name = clzName.substr(clzName.lastIndexOf('.') + 1);\r\n                services[clzName].methods.forEach((method) => {\r\n                    let fns = [];\r\n                    method.args.forEach((el) => {\r\n                        switch (el) {\r\n                            case 'java.lang.String':\r\n                                fns.push((value) => {\r\n                                    if (value === null || value === undefined || value === 'null') {\r\n                                        return null;\r\n                                    }\r\n                                    return tool.stringSafeChange(this._strictString,value + str);\r\n                                });\r\n                                break;\r\n                            case 'int':\r\n                            case 'float':\r\n                            case 'double':\r\n                            case 'long':\r\n                                fns.push(value => +value);\r\n                                break;\r\n                            case 'java.lang.Integer':\r\n                            case 'java.lang.Double':\r\n                            case 'java.lang.Float':\r\n                            case 'java.lang.Long':\r\n                            case 'java.lang.Number':\r\n                                fns.push((value) => {\r\n                                    if (value !== null && value !== undefined && value !== '') {\r\n                                        return +value;\r\n                                    }\r\n                                    return null;\r\n                                });\r\n                                break;\r\n                            case 'java.math.BigDecimal':\r\n                                fns.push((value) => {\r\n                                    if (value === '' || value === undefined || value === null) {\r\n                                        return null;\r\n                                    } else if (typeof value === 'object') {\r\n                                        if (value.value === '' || value.value === undefined || value.value === null) return null;\r\n                                        else return {value: +value.value}\r\n                                    } else {\r\n                                        return {value: +value}\r\n                                    }\r\n                                });\r\n                                break;\r\n                            case 'java.lang.Boolean':\r\n                                fns.push((value) => {\r\n                                    if (value === '' || value === undefined) {\r\n                                        return null;\r\n                                    } else if (typeof value === 'string') {\r\n                                        return value === 'true';\r\n                                    } else {\r\n                                        return value\r\n                                    }\r\n                                });\r\n                                break;\r\n                            default:\r\n                                var type_, isArray = false;\r\n                                if (el.indexOf('java.util.List') === -1) {\r\n                                    type_ = el;\r\n                                } else {\r\n                                    type_ = el.match(/<(.*)>/);\r\n                                    isArray = true;\r\n                                    type_ !== null && (type_ = type_[1]);\r\n                                }\r\n                                if (this._domains[type_] !== undefined) {\r\n                                    if (isArray === true) {\r\n                                        fns.push((value) => {\r\n                                            if (value !== null && value !== undefined) {\r\n                                                value.forEach((valuei,i) => {\r\n                                                    if (valuei !== null && valuei !== undefined) {\r\n                                                        value[i] = this._dataCheck(valuei, type_);\r\n                                                    }\r\n                                                })\r\n                                            }\r\n                                            return value;\r\n                                        });\r\n                                    } else {\r\n                                        fns.push((value) => {\r\n                                            if (value !== null && value !== undefined) {\r\n                                                value = this._dataCheck(value, type_);\r\n                                            }\r\n                                            return value;\r\n                                        });\r\n                                    }\r\n                                } else {\r\n                                    fns.push(value => value);\r\n                                }\r\n                                break;\r\n                        }\r\n                    });\r\n                    methods[method.name] = async(...args) => {\r\n                        if (args.length !== this._service[name][method.name].check.length) {\r\n                            this.emit('error', {\r\n                                host: null,\r\n                                className: clzName,\r\n                                methodName: method.name,\r\n                                param: args,\r\n                                time: 0,\r\n                                error: `调用${clzName}/${method.name}参数不符,期望${this._service[name][method.name].check.length}个,传了${args.length}个!`\r\n                            });\r\n                            throw {\r\n                                stata: 101006,\r\n                                message: `调用${clzName}/${method.name}参数不符,期望${this._service[name][method.name].check.length}个,传了${args.length}个!`,\r\n                                error: `调用${clzName}/${method.name}参数不符,期望${this._service[name][method.name].check.length}个,传了${args.length}个!`\r\n                            };\r\n                        }\r\n                        args.forEach((value, index) => {\r\n                            args[index] = this._service[name][method.name].check[index](value);\r\n                        });\r\n                        return await this._invoke(clzName, method.name, args);\r\n                    };\r\n                    methods[method.name].check = fns;\r\n                });\r\n                this._service[name] = methods;\r\n                if (this._host[clzName]) {\r\n                    this.emit(name, this._host[clzName]);\r\n                }\r\n            });\r\n        }\r\n\r\n        if(type === 0){\r\n            this._file_finished = true;\r\n            this._finish_call();\r\n        }\r\n    }\r\n\r\n    async _readNode(node) {\r\n        if (node === undefined) {\r\n            let children = await this._getChildren(`/${this._service_group}`, () => this._readNode());\r\n            children.forEach(child => this._readNode(child));\r\n            this._node_finished = true;\r\n            this._finish_call();\r\n            this.emit('node');\r\n        } else {\r\n            let hosts = [];\r\n            if (this._version[node] === undefined) {\r\n                this._version[node] = [];\r\n            }\r\n            let services = await this._getChildren(`/${this._service_group}/${node}/${vider}`, () => this._readNode(node));\r\n            let consumer = this._consumer();\r\n            let name = node.substr(node.lastIndexOf('.') + 1);\r\n            consumer.query.interface = node;\r\n            consumer.host = `${this._clientHost}/${node}`;\r\n            consumer.query.timestamp = consumer.query['×tamp'] = (new Date()).getTime();\r\n            consumer.query.version = consumer.query.revision = this._service_version || str;\r\n            services.forEach((service) => {\r\n                service = decodeURIComponent(service);\r\n                let ser_param = querystring.parse(service);\r\n                if (this._service_version !== false && (ser_param['default.version'] || ser_param['version']) !== this._service_version) return;\r\n                let ser_host = url.parse(service);\r\n                if (this._ip !== false && ser_host.hostname !== this._ip) return;\r\n                hosts.push(ser_host.host);\r\n                let version = ser_param['default.version'] || ser_param['version'];\r\n                if (this._version[node].indexOf(version) === -1) {\r\n                    this._version[node].push(consumer.query.version = consumer.query.revision = version);\r\n                    this._addNode(`/${this._service_group}/${node}/consumers/${encodeURIComponent(url.format(consumer))}`);\r\n                }\r\n            });\r\n            this._host[node] = hosts;\r\n            if (this._service[name]) {\r\n                this.emit(name, this._host[node]);\r\n            }\r\n            this.emit('node-' + name, this._host[node]);\r\n        }\r\n    }\r\n\r\n    _finish_call() {\r\n        if (this._file_finished === true && this._node_finished === true && this._called === false) {\r\n            this._called = true;\r\n            this.emit('all');\r\n        }\r\n    }\r\n\r\n    _consumer() {\r\n        return {\r\n            protocol: 'consumer',\r\n            slashes: 'true',\r\n            host: str,\r\n            query: {\r\n                application: this._name,\r\n                category: 'consumers',\r\n                'default.timeout': this._connectTimeout,\r\n                check: 'false',\r\n                dubbo: this._service_version,\r\n                interface: str,\r\n                revision: str,\r\n                version: str,\r\n                side: 'consumer',\r\n                timestamp: str\r\n            }\r\n        };\r\n    }\r\n\r\n    _init() {\r\n        this._host = {};\r\n        this._version = {};\r\n        this._domains = {};\r\n        this._service = {};\r\n        this._called = false;\r\n        this._client.once('connected', () => {\r\n            this._getChildren = tool.P(this._client.getChildren, this._client);\r\n            this._exists = tool.P(this._client.exists, this._client);\r\n            this._createNode = tool.P(this._client.create, this._client);\r\n            this._readNode();\r\n        }).once('disconnected', () => this._host = {});\r\n\r\n        fs.watch('./interface/domain', () => this._readFile(1));\r\n        fs.watch('./interface/service', () => this._readFile(2));\r\n        this._readFile();\r\n        this._client.connect();\r\n    }\r\n\r\n    async _addNode(node) {\r\n        let stat = await this._exists(node);\r\n        if (stat) return;\r\n        this._createNode(node, 1);\r\n    }\r\n\r\n    _random(arr) {\r\n        return arr[Math.floor(Math.random() * arr.length)];\r\n    }\r\n\r\n    _invoke(clzName, methodName, args,host) {\r\n        return new Promise((resolve,reject) => {\r\n            let begin = +new Date();\r\n            if (this._host[clzName] === undefined || this._host[clzName].length === 0) {\r\n                this.emit('error', {\r\n                    host: null,\r\n                    className: clzName,\r\n                    methodName: methodName,\r\n                    param: args,\r\n                    time: 0,\r\n                    error: `${clzName}/${methodName}zk中找不到对应的服务节点`\r\n                });\r\n                throw {\r\n                    message: `${clzName}/${methodName}zk中找不到对应的服务节点`,\r\n                    error: `${clzName}/${methodName}zk中找不到对应的服务节点`,\r\n                    state: 101002\r\n                };\r\n            }\r\n            if(host === undefined){\r\n                host = this._random(this._host[clzName]);\r\n            }\r\n            let domain_ = domain.create();\r\n            domain_.on('error', (err) => {\r\n                if (err.code && err.code.toString() === 'ECONNREFUSED') {\r\n                    let end = +new Date();\r\n                    this.emit('error', {\r\n                        host: host,\r\n                        className: clzName,\r\n                        methodName: methodName,\r\n                        param: args,\r\n                        time: end - begin,\r\n                        error: `${host}/${clzName}/${methodName}连接失败!`\r\n                    });\r\n                    reject({\r\n                        message: `${host}/${clzName}/${methodName}连接失败!`,\r\n                        error: `${host}/${clzName}/${methodName}连接失败!`,\r\n                        state: 101005\r\n                    });\r\n                } else {\r\n                    let end = +new Date();\r\n                    this.emit('error', {\r\n                        host: host,\r\n                        className: clzName,\r\n                        methodName: methodName,\r\n                        param: args,\r\n                        time: end - begin,\r\n                        error: `${host}/${clzName}/${methodName}发生未知异常:${JSON.stringify(err)}!`\r\n                    });\r\n                    reject({\r\n                        message: `${host}/${clzName}/${methodName}发生未知异常:${JSON.stringify(err)}!`,\r\n                        error: `${host}/${clzName}/${methodName}发生未知异常:${JSON.stringify(err)}!`,\r\n                        state: 101004\r\n                    });\r\n                }\r\n            });\r\n            domain_.run(() => {\r\n                var proxy = new hessian.Proxy(`http://${host}/${clzName}`, this._username, this._password, proxy);\r\n                proxy.invoke(methodName, args, (err, reply) => {\r\n                    if (reply && reply.fault === true) {\r\n                        let end = +new Date();\r\n                        this.emit('error', {\r\n                            host: host,\r\n                            className: clzName,\r\n                            methodName: methodName,\r\n                            param: args,\r\n                            time: end - begin,\r\n                            error: `${host}/${clzName}/${methodName}发生故障!`\r\n                        });\r\n                        reject({\r\n                            message: `${host}/${clzName}/${methodName}发生故障!`,\r\n                            error: `${host}/${clzName}/${methodName}发生故障!`,\r\n                            state: 101004\r\n                        });\r\n                    } else if (err) {\r\n                        let end = +new Date();\r\n                        this.emit('error', {\r\n                            host: host,\r\n                            className: clzName,\r\n                            methodName: methodName,\r\n                            param: args,\r\n                            time: end - begin,\r\n                            error: `${host}/${clzName}/${methodName}发生异常${JSON.stringify(err)}!`\r\n                        });\r\n                        reject({\r\n                            message: `${host}/${clzName}/${methodName}发生异常${JSON.stringify(err)}!`,\r\n                            error: `${host}/${clzName}/${methodName}发生异常${JSON.stringify(err)}!`,\r\n                            state: 101004\r\n                        });\r\n                    } else {\r\n                        let end = +new Date();\r\n                        this.emit('data', {\r\n                            host: host,\r\n                            className: clzName,\r\n                            methodName: methodName,\r\n                            param: args,\r\n                            time: end - begin,\r\n                            data: reply\r\n                        });\r\n                        if (this._data) {\r\n                            try{\r\n                                resolve(this._data(reply));\r\n                            }catch(error){\r\n                                this.emit('error', {\r\n                                    host: host,\r\n                                    className: clzName,\r\n                                    methodName: methodName,\r\n                                    param: args,\r\n                                    time: end - begin,\r\n                                    error: `${host}/${clzName}/${methodName}发生异常${JSON.stringify(error)}!`\r\n                                });\r\n                                reject(error);\r\n                            }\r\n                        } else {\r\n                            resolve(reply);\r\n                        }\r\n                    }\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    _dataCheck(domain, fullName) {\r\n        let fn = this._domains[fullName];\r\n        var pre = {};\r\n        if (domain === false) {\r\n            Object.keys(fn).forEach(i => pre[i] = fn[i](''))\r\n        } else {\r\n            Object.keys(domain).forEach(i => fn.hasOwnProperty(i) && (pre[i] = fn[i](domain[i])))\r\n        }\r\n        pre.__type__ = fullName;\r\n        return pre;\r\n    }\r\n}\r\nmodule.exports = exports.default;"]}